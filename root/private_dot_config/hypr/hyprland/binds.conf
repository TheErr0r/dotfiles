# main mod
$mod = super

# other mods
$ctrl  = ctrl
$alt   = alt
$shift = shift

# special keys
$enter     = return
$backspace = backspace
$backslash = backslash
$tab       = tab
$space     = space
$prtsrc    = print

# mouse buttons
$mouse_lb = mouse:272
$mouse_rb = mouse:273
$mouse_mb = mouse:274

# mouse movement
$mouse_up    = mouse_up
$mouse_right = mouse_right
$mouse_down  = mouse_down
$mouse_left  = mouse_left

# hjkl
$hjkl_up    = k
$hjkl_right = l
$hjkl_down  = j
$hjkl_left  = h

# directions
$dir_up    = u
$dir_right = r
$dir_down  = d
$dir_left  = l

# system

bind = $mod $ctrl, E, exit
bind = $mod $ctrl, P, exec, poweroff
bind = $mod $ctrl, R, exec, reboot
bind = $mod $ctrl, B, exec, killall -SIGUSR1 waybar
bind = $mod $ctrl, D, exec, hyprpicker -a

# brightness

$BRIGHTNESS_COMMAND = brightnessctl set

$BRIGHTNESS_KEY_POSITIVE = bracketright
$BRIGHTNESS_KEY_NEGATIVE = bracketleft

$DELTA_POSITIVE_STEP = +1%
$DELTA_NEGATIVE_STEP = 1%-

$DELTA_POSITIVE_LEAP = +10%
$DELTA_NEGATIVE_LEAP = 10%-

$BRIGHTNESS_STEP_POSITIVE = $mod $ctrl, $BRIGHTNESS_KEY_POSITIVE, exec,
$BRIGHTNESS_STEP_NEGATIVE = $mod $ctrl, $BRIGHTNESS_KEY_NEGATIVE, exec,

$BRIGHTNESS_LEAP_POSITIVE = $mod $ctrl $shift, $BRIGHTNESS_KEY_POSITIVE, exec,
$BRIGHTNESS_LEAP_NEGATIVE = $mod $ctrl $shift, $BRIGHTNESS_KEY_NEGATIVE, exec,

binde = $BRIGHTNESS_STEP_POSITIVE $BRIGHTNESS_COMMAND $DELTA_POSITIVE_STEP
binde = $BRIGHTNESS_STEP_NEGATIVE $BRIGHTNESS_COMMAND $DELTA_NEGATIVE_STEP

binde = $BRIGHTNESS_LEAP_POSITIVE $BRIGHTNESS_COMMAND $DELTA_POSITIVE_LEAP
binde = $BRIGHTNESS_LEAP_NEGATIVE $BRIGHTNESS_COMMAND $DELTA_NEGATIVE_LEAP

# window control

bind = $mod, $backspace, killactive
bind = $mod, V, togglefloating
bind = $mod, F, fullscreen
bind = $mod, P, pseudo
bind = $mod, $backslash, togglesplit

$WINDOW_FLOATING_CENTER_SIZE = 33% 33%
bind = $mod, $space, togglefloating
bind = $mod, $space, resizeactive, exact $WINDOW_FLOATING_CENTER_SIZE
bind = $mod, $space, centerwindow

bind = $mod, slash, tagwindow, alpha-0.9

# hyprexpo

# hyprlang noerror true
bind = $mod $ctrl, Tab, hyprexpo:expo, toggle
# hyprlang noerror false

# programs

bind = $mod, $enter, exec, $TERMINAL
bind = $mod, R,      exec, $LAUNCHER --show drun
bind = $mod, B,      exec, $BROWSER

# window management
# MOD + DIRECTION -> focus
# MOD + SHIFT + DIRECTION -> size
# MOD + ALT + DIRECTION -> move

# move the window focus

bind = $mod, $hjkl_up,    movefocus, $dir_up
bind = $mod, $hjkl_right, movefocus, $dir_right
bind = $mod, $hjkl_down,  movefocus, $dir_down
bind = $mod, $hjkl_left,  movefocus, $dir_left

# resize the active window

$RESIZE_UP    =   0 -40
$RESIZE_RIGHT =  40   0
$RESIZE_DOWN  =   0  40
$RESIZE_LEFT  = -40   0

binde = $mod $shift, $hjkl_up,    resizeactive, $RESIZE_UP
binde = $mod $shift, $hjkl_right, resizeactive, $RESIZE_RIGHT
binde = $mod $shift, $hjkl_down,  resizeactive, $RESIZE_DOWN
binde = $mod $shift, $hjkl_left,  resizeactive, $RESIZE_LEFT

# move the active window

bind = $mod $alt, $hjkl_up,    movewindow, $dir_up
bind = $mod $alt, $hjkl_right, movewindow, $dir_right
bind = $mod $alt, $hjkl_down,  movewindow, $dir_down
bind = $mod $alt, $hjkl_left,  movewindow, $dir_left

# swap the active window

bind = $mod $shift $alt, $hjkl_up,    swapwindow, $dir_up
bind = $mod $shift $alt, $hjkl_right, swapwindow, $dir_right
bind = $mod $shift $alt, $hjkl_down,  swapwindow, $dir_down
bind = $mod $shift $alt, $hjkl_left,  swapwindow, $dir_left

# cycle the active window

bind = $mod,        $tab, cyclenext
bind = $mod $shift, $tab, cyclenext, prev

# switch to the workspace

bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9
bind = $mod, 0, workspace, 10

# move the active window to the workspace

bind = $mod $shift, 1, movetoworkspace, 1
bind = $mod $shift, 2, movetoworkspace, 2
bind = $mod $shift, 3, movetoworkspace, 3
bind = $mod $shift, 4, movetoworkspace, 4
bind = $mod $shift, 5, movetoworkspace, 5
bind = $mod $shift, 6, movetoworkspace, 6
bind = $mod $shift, 7, movetoworkspace, 7
bind = $mod $shift, 8, movetoworkspace, 8
bind = $mod $shift, 9, movetoworkspace, 9
bind = $mod $shift, 0, movetoworkspace, 10

# scroll workspaces with mouse

bind = $mod, $mouse_down, workspace, e+1
bind = $mod, $mouse_up,   workspace, e-1

# move/resize window on mouse

bindm = $mod, $mouse_lb, movewindow
bindm = $mod, $mouse_rb, resizewindow

# screenshots

$SCREENSHOT_COMMAND = exec, grimblast --notify --cursor copysave

# $SCREENSHOT_DIRECTORY = $(xdg-user-dir PICTURES)/screenshots/laptop
$SCREENSHOT_DIRECTORY = Pictures/screenshots/laptop
$SCREENSHOT_FILENAME  = $(date +"%Y-%m-%d-%H-%M-%S.png")
$SCREENSHOT_FORMAT    = $SCREENSHOT_DIRECTORY/$SCREENSHOT_FILENAME

$SCREENSHOT_SCREEN = $SCREENSHOT_COMMAND screen $SCREENSHOT_FORMAT
$SCREENSHOT_ACTIVE = $SCREENSHOT_COMMAND active $SCREENSHOT_FORMAT
$SCREENSHOT_AREA   = $SCREENSHOT_COMMAND area   $SCREENSHOT_FORMAT

$SCREENSHOT_KEY = s

bind = ,       $prtsrc, $SCREENSHOT_SCREEN
bind = $ctrl,  $prtsrc, $SCREENSHOT_ACTIVE
bind = $shift, $prtsrc, $SCREENSHOT_AREA

bind = $mod $ctrl,        $SCREENSHOT_KEY, $SCREENSHOT_SCREEN
bind = $mod $ctrl $shift, $SCREENSHOT_KEY, $SCREENSHOT_AREA

# clipboard
# source: https://wiki.hyprland.org/Useful-Utilities/Clipboard-Managers/#for-wofi-users

$CLIPBOARD_HISTORY = cliphist list
$CLIPBOARD_DECODE  = cliphist decode

$WOFI_CONFIG  = "$XDG_CONFIG_HOME/wofi/config-cliphist"
$WOFI_OPTIONS = --dmenu --pre-display-cmd "cliphist-wofi-img %s"
$WOFI_COMMAND = wofi --conf $WOFI_CONFIG $WOFI_OPTIONS

$COPY = wl-copy

bind = $mod $ctrl, V, exec, $CLIPBOARD_HISTORY | $WOFI_COMMAND | $CLIPBOARD_DECODE | $COPY

# TODO: move this to README in the future
# short guide to replicate image preview
#
# source: https://github.com/pdf/cliphist-wofi-img
#
# first, install the package:
# go install github.com/pdf/cliphist-wofi-img@latest
#
# second, cd into:
# $HOME/go/pkg/mod/github.com/pdf/cliphist-wofi-img@vX.X.X
#
# third, build the binary executable:
# sudo go build main.go
#
# fourth, move the executable to /usr/bin.
# also rename it as you prefer (in my case "cliphist-wofi-img").
# final command looks like:
# sudo mv ./main /usr/bin/cliphist-wofi-img
#
# fifth, edit your wofi config:
# pre_display_exec=true
#
# sixth, launch wofi with:
# --pre-display-cmd "cliphist-wofi-img %s"
# (example of the command is above)
#
# everything should work. of course, you must
# install wofi, wl-copy and cliphist before that.
#
# thank you https://github.com/pdf for this amazing solution
