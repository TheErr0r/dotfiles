# main mod
$mod = super

# other mods
$ctrl  = ctrl
$alt   = alt
$shift = shift

# special keys

$enter      = return
$backspace  = backspace
$backslash  = backslash

$br_left  = bracketleft
$br_right = bracketright

$semicolon  = semicolon
$apostrophe = apostrophe

$arrow_less    = comma
$arrow_greater = period

$tab   = tab
$space = space

$prtscr = print

# mouse buttons
$mouse_lb      = mouse:272
$mouse_rb      = mouse:273
$mouse_mb      = mouse:274
$mouse_forward = mouse:276
$mouse_back    = mouse:275

# mouse movement
$mouse_up    = mouse_up
$mouse_right = mouse_right
$mouse_down  = mouse_down
$mouse_left  = mouse_left

# hjkl
$hjkl_up    = k
$hjkl_right = l
$hjkl_down  = j
$hjkl_left  = h

# directions
$dir_up    = u
$dir_right = r
$dir_down  = d
$dir_left  = l

# settings

binds {
    scroll_event_delay = 0
    workspace_back_and_forth = true
}

# system

bind = $mod $ctrl, e, exit
bind = $mod $ctrl, p, exec, poweroff
bind = $mod $ctrl, r, exec, reboot
bind = $mod $ctrl, b, exec, killall -SIGUSR1 waybar
bind = $mod $ctrl, d, exec, hyprpicker -a

# brightness

# temporarily disabled

# $BRIGHTNESS_COMMAND = brightnessctl set

# $BRIGHTNESS_KEY_POSITIVE = bracketright
# $BRIGHTNESS_KEY_NEGATIVE = bracketleft

# $DELTA_POSITIVE_STEP = +1%
# $DELTA_NEGATIVE_STEP = 1%-

# $DELTA_POSITIVE_LEAP = +10%
# $DELTA_NEGATIVE_LEAP = 10%-

# $BRIGHTNESS_STEP_POSITIVE = $mod $ctrl, $BRIGHTNESS_KEY_POSITIVE, exec,
# $BRIGHTNESS_STEP_NEGATIVE = $mod $ctrl, $BRIGHTNESS_KEY_NEGATIVE, exec,

# $BRIGHTNESS_LEAP_POSITIVE = $mod $ctrl $shift, $BRIGHTNESS_KEY_POSITIVE, exec,
# $BRIGHTNESS_LEAP_NEGATIVE = $mod $ctrl $shift, $BRIGHTNESS_KEY_NEGATIVE, exec,

# binde = $BRIGHTNESS_STEP_POSITIVE $BRIGHTNESS_COMMAND $DELTA_POSITIVE_STEP
# binde = $BRIGHTNESS_STEP_NEGATIVE $BRIGHTNESS_COMMAND $DELTA_NEGATIVE_STEP

# binde = $BRIGHTNESS_LEAP_POSITIVE $BRIGHTNESS_COMMAND $DELTA_POSITIVE_LEAP
# binde = $BRIGHTNESS_LEAP_NEGATIVE $BRIGHTNESS_COMMAND $DELTA_NEGATIVE_LEAP

# window control
bind = $mod, v, togglefloating
bind = $mod, p, pseudo

# special workspace (S is the name for waybar)
bind = $mod,              $space, togglespecialworkspace, S
bind = $mod $shift,       $space, movetoworkspacesilent, special:S
bind = $mod $shift $ctrl, $space, movetoworkspace,       special:S

# search and launcher
bind = $mod,        r, exec, albert toggle
bind = $mod $shift, r, exec, $LAUNCHER --show drun

# opacity
bind = $mod, slash, tagwindow, alpha-0.9

# hyprexpo
bind = $mod $ctrl, $tab, hyprexpo:expo, toggle

# programs
bind = $mod, b, exec, $BROWSER

# window management

# open
bind = $mod,       $enter, exec, SHELL=nu $TERMINAL
bind = $mod $ctrl, $enter, exec, $TERMINAL

# close
bind = $mod,        $backspace, killactive
bind = $mod $shift, $backspace, forcekillactive

# info: it kills *current* workspace, *not* hovered by mouse
# if you want to kill on mouse hover, grab it with lmb and then press mmb
bind = $mod,        $mouse_mb, killactive
bind = $mod $shift, $mouse_mb, forcekillactive

# other binds
bind = $mod, f, fullscreen

# focus
bind = $mod, $hjkl_up,    movefocus, $dir_up
bind = $mod, $hjkl_right, movefocus, $dir_right
bind = $mod, $hjkl_down,  movefocus, $dir_down
bind = $mod, $hjkl_left,  movefocus, $dir_left

# focus relative
bind = $mod, $br_left,  cyclenext, prev
bind = $mod, $br_right, cyclenext

# focus relative (mouse)
bind = $mod, $mouse_back,    cyclenext, prev
bind = $mod, $mouse_forward, cyclenext

# swap
bind = $mod $shift, $hjkl_up,    swapwindow, $dir_up
bind = $mod $shift, $hjkl_right, swapwindow, $dir_right
bind = $mod $shift, $hjkl_down,  swapwindow, $dir_down
bind = $mod $shift, $hjkl_left,  swapwindow, $dir_left

# swap relative
bind = $mod $shift, $br_left,  swapnext, prev
bind = $mod $shift, $br_right, swapnext

# groups

bind = $mod $ctrl, g, togglegroup

bind = $mod $ctrl, $br_left,  changegroupactive, b
bind = $mod $ctrl, $br_right, changegroupactive, f

bind = $mod $shift $ctrl, $br_left,  movegroupwindow, b
bind = $mod $shift $ctrl, $br_right, movegroupwindow, f

bind = $mod $ctrl, $hjkl_up,    movewindoworgroup, $dir_up
bind = $mod $ctrl, $hjkl_right, movewindoworgroup, $dir_right
bind = $mod $ctrl, $hjkl_down,  movewindoworgroup, $dir_down
bind = $mod $ctrl, $hjkl_left,  movewindoworgroup, $dir_left

bind = $mod $ctrl, 1, changegroupactive, 1
bind = $mod $ctrl, 2, changegroupactive, 2
bind = $mod $ctrl, 3, changegroupactive, 3
bind = $mod $ctrl, 4, changegroupactive, 4
bind = $mod $ctrl, 5, changegroupactive, 5
bind = $mod $ctrl, 6, changegroupactive, 6
bind = $mod $ctrl, 7, changegroupactive, 7
bind = $mod $ctrl, 8, changegroupactive, 8
bind = $mod $ctrl, 9, changegroupactive, 9

# resize
$resize = 40

$resize_up    = 0 -$resize
$resize_right =  $resize 0
$resize_down  = 0  $resize
$resize_left  = -$resize 0

binde = $mod $shift $ctrl, $hjkl_up,    resizeactive, $resize_up
binde = $mod $shift $ctrl, $hjkl_right, resizeactive, $resize_right
binde = $mod $shift $ctrl, $hjkl_down,  resizeactive, $resize_down
binde = $mod $shift $ctrl, $hjkl_left,  resizeactive, $resize_left

# layout
bind = $mod,        $backslash, layoutmsg, togglesplit
bind = $mod $shift, $backslash, layoutmsg, swapsplit

bind = $mod, $semicolon,  layoutmsg, preselect $dir_down
bind = $mod, $apostrophe, layoutmsg, preselect $dir_right

# move the active window
# temporarily not used
# bind = $mod $alt, $hjkl_up,    movewindow, $dir_up
# bind = $mod $alt, $hjkl_right, movewindow, $dir_right
# bind = $mod $alt, $hjkl_down,  movewindow, $dir_down
# bind = $mod $alt, $hjkl_left,  movewindow, $dir_left

# workspace control

# focus
bind = $mod, 1, workspace, 1
bind = $mod, 2, workspace, 2
bind = $mod, 3, workspace, 3
bind = $mod, 4, workspace, 4
bind = $mod, 5, workspace, 5
bind = $mod, 6, workspace, 6
bind = $mod, 7, workspace, 7
bind = $mod, 8, workspace, 8
bind = $mod, 9, workspace, 9

# focus relative
bind = $mod, $arrow_less,    workspace, m-1
bind = $mod, $arrow_greater, workspace, m+1

# focus relative (mouse)
bind = $mod, $mouse_up,   workspace, m-1
bind = $mod, $mouse_down, workspace, m+1

# swap window to

bind = $mod $shift, 1, movetoworkspacesilent, 1
bind = $mod $shift, 2, movetoworkspacesilent, 2
bind = $mod $shift, 3, movetoworkspacesilent, 3
bind = $mod $shift, 4, movetoworkspacesilent, 4
bind = $mod $shift, 5, movetoworkspacesilent, 5
bind = $mod $shift, 6, movetoworkspacesilent, 6
bind = $mod $shift, 7, movetoworkspacesilent, 7
bind = $mod $shift, 8, movetoworkspacesilent, 8
bind = $mod $shift, 9, movetoworkspacesilent, 9

bind = $mod $shift $ctrl, 1, movetoworkspace, 1
bind = $mod $shift $ctrl, 2, movetoworkspace, 2
bind = $mod $shift $ctrl, 3, movetoworkspace, 3
bind = $mod $shift $ctrl, 4, movetoworkspace, 4
bind = $mod $shift $ctrl, 5, movetoworkspace, 5
bind = $mod $shift $ctrl, 6, movetoworkspace, 6
bind = $mod $shift $ctrl, 7, movetoworkspace, 7
bind = $mod $shift $ctrl, 8, movetoworkspace, 8
bind = $mod $shift $ctrl, 9, movetoworkspace, 9

# mouse lb/rb
bindm = $mod,        $mouse_lb, movewindow
bindm = $mod $shift, $mouse_lb, movewindow
bindm = $mod,        $mouse_rb, resizewindow 2
bindm = $mod $shift, $mouse_rb, resizewindow 1

# screenshots

$shot_exec = exec, grimblast --notify

# $shot_dir = $(xdg-user-dir PICTURES)/screenshots/laptop
$shot_dir  = $HOME/Pictures/screenshots/laptop
$shot_name = $(date +"%Y-%m-%d-%H-%M-%S.png")
$shot_path = $shot_dir/$shot_name

$shot_screen = $shot_exec --cursor copysave screen $shot_path
$shot_active = $shot_exec --cursor copysave active $shot_path
$shot_area   = $shot_exec copysave area            $shot_path

bind = $mod,        s, $shot_screen
bind = $mod $shift, s, $shot_area
bind = $mod $ctrl,  s, $shot_active

# clipboard
# source: https://wiki.hyprland.org/Useful-Utilities/Clipboard-Managers/#for-wofi-users

$clip_hist   = cliphist list
$clip_decode = cliphist decode

$wofi_cfg  = "$XDG_CONFIG_HOME/wofi/config-cliphist"
$wofi_opts = --dmenu --pre-display-cmd "cliphist-wofi-img %s"
$wofi_cmd  = wofi --conf $wofi_cfg $wofi_opts

$copy_cmd = wl-copy

bind = $mod $ctrl, V, exec, $clip_hist | $wofi_cmd | $clip_decode | $copy_cmd

# TODO: move this to README in the future
# short guide to replicate image preview
#
# source: https://github.com/pdf/cliphist-wofi-img
#
# first, install the package:
# go install github.com/pdf/cliphist-wofi-img@latest
#
# second, cd into:
# $HOME/go/pkg/mod/github.com/pdf/cliphist-wofi-img@vX.X.X
#
# third, build the binary executable:
# sudo go build main.go
#
# fourth, move the executable to /usr/bin.
# also rename it as you prefer (in my case "cliphist-wofi-img").
# final command looks like:
# sudo mv ./main /usr/bin/cliphist-wofi-img
#
# fifth, edit your wofi config:
# pre_display_exec=true
#
# sixth, launch wofi with:
# --pre-display-cmd "cliphist-wofi-img %s"
# (example of the command is above)
#
# everything should work. of course, you must
# install wofi, wl-copy and cliphist before that.
#
# thank you https://github.com/pdf for this amazing solution
